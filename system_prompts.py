system_prompt = {
    "type": "text",
    "text": "The input is a JSON object with two main keys: 'reference_app' and 'competitors'.\n\n"
            "- 'reference_app' contains the title and description of the main app you will use as the basis for comparison.\n"
            "- 'competitors' is a list of other apps, each with its own title and description.\n\n"
            "Your task is to compute similarity scores between the 'reference_app' and each app in the 'competitors' list. "
            "The similarity score will be used to identify competitors on the same market. Use your knowledge and the descriptions provided to compute these scores. "
            "Give higher similarity scores to apps that are more similar in purpose and functionality to the 'reference_app', and lower scores if the core functionality differs.\n\n"
            "The output should be a JSON object with the titles of each competitor app as keys and similarity scores as values. "
            "The similarity score should be a float between 0.00 and 1.00 (2 decimals after the point), where 1.0 indicates identical functionality and purpose to the 'reference_app'.\n\n"
            "Please output only the JSON object with similarity scores and no additional text."
}

# system_prompts.py

generate_insights_prompt = {
    "type": "text",
    "text": "The input is a JSON object containing app IDs as keys and lists of user reviews as values. "
            "Here's an example:\n\n"
            "{\n"
            "    \"com.ubercab\": [\n"
            "        \"Great app but crashes frequently.\",\n"
            "        \"Driver rates are too high.\",\n"
            "        \"Easy to use but payment fails sometimes.\"\n"
            "    ]\n"
            "}\n\n"
            "Analyze these reviews to extract insights about all the apps. Identify common user pain points, positive feedback, "
            "and suggestions for improvement. For each insight, provide:\n"
            "1. A title summarizing the issue or positive aspect.\n"
            "2. The number of users mentioning this issue.\n"
            "3. Four representative quotes from users about this issue.\n"
            "4. Sentiments associated with the issue using one of the following enums:\n\n"
            "    SATISFIED, DISSATISFIED, HAPPY, ANGRY, EXCITED, DISAPPOINTED, SURPRISED, FRUSTRATED, GRATEFUL,\n"
            "    CONFUSED, RELIEVED, AMAZED, UNSURE, IMPRESSED, DISGUSTED, APPRECIATIVE, NEUTRAL, ENTHUSIASTIC, SAD,\n"
            "    HOPEFUL, CONCERNED, TRUSTING, REGRETFUL\n\n"
            "Format the output as follows:\n"
            "{\n"
            "    \"apps\": [\n"
            "        {\n"
            "            \"appId\": \"com.ubercab\",\n"
            "            \"insights\": [\n"
            "                {\n"
            "                    \"title\": \"Annoying Crashes\",\n"
            "                    \"amount\": 50,\n"
            "                    \"quotes\": [\n"
            "                        \"The app crashes often.\",\n"
            "                        \"I can't complete a ride without the app crashing.\",\n"
            "                        \"Crashes happen every time I open the app.\",\n"
            "                        \"Unstable, crashes a lot.\"\n"
            "                    ],\n"
            "                    \"sentiments\": [\"FRUSTRATED\", \"DISAPPOINTED\"]\n"
            "                },\n"
            "                {...}\n"
            "            ]\n"
            "        }\n"
            "       {...}\n"
            "    ]\n"
            "}\n\n"
            "Please output only the JSON object and no additional text."
}
